FROM public.ecr.aws/amazonlinux/amazonlinux:latest
# RUN rm -rf /etc/yum.repos.d/amzn2-core.repo
# RUN Is /etc/yum.repos.d/
# #COPY income.repo /etc/yum.repos.d/
# RUN 1s /etc/yum.repos.d/
ENTRYPOINT ["sleep","infinity"]
#Terraform Installationsudo yum update
RUN  yum update

RUN yum install -y unzip
#RUN curl -L https://releases.hashicorp.com/terraform/1.4.0/terraform_1.4.0_linux_amd64.zip -o terraform.zip
#RUN curl -L https://releases.hashicorp.com/terraform/0.15.5/terraform_0.15.5_linux_amd64.zip -o terraform.zip
RUN curl -L https://releases.hashicorp.com/terraform/1.5.2/terraform_1.5.2_linux_amd64.zip -o terraform.zip


RUN unzip terraform.zip && mv terraform /usr/local/bin/
RUN rm -f terraform.zip
RUN terraform --version

# Create a Terraform configuration file to specify the required providers
RUN mkdir /terraform && \
    cd /terraform && \
    echo 'terraform {' > provider.tf && \
    echo '  required_providers {' >> provider.tf && \
    echo '    aws = {' >> provider.tf && \
    echo '      source  = "hashicorp/aws"' >> provider.tf && \
    echo '      version = "4.5.0"' >> provider.tf && \
    echo '    }' >> provider.tf && \
    echo '  }' >> provider.tf && \
    echo '}' >> provider.tf

# Create a local mirror of the required providers
RUN cd /terraform && \
    terraform providers mirror /root/tf_cache

# Configure Terraform to use the local mirror
RUN mkdir -p /root/.terraform.d && \
    echo 'provider_installation {' > /root/.terraform.d/cli.tfrc && \
    echo '  filesystem_mirror {' >> /root/.terraform.d/cli.tfrc && \
    echo '    path = "/root/tf_cache"' >> /root/.terraform.d/cli.tfrc && \
    echo '    include = ["registry.terraform.io/hashicorp/*"]' >> /root/.terraform.d/cli.tfrc && \
    echo '  }' >> /root/.terraform.d/cli.tfrc && \
    echo '  direct {' >> /root/.terraform.d/cli.tfrc && \
    echo '    exclude = ["registry.terraform.io/hashicorp/*"]' >> /root/.terraform.d/cli.tfrc && \
    echo '  }' >> /root/.terraform.d/cli.tfrc && \
    echo '}' >> /root/.terraform.d/cli.tfrc

# Run Terraform init to initialize the working directory for offline use
RUN cd /terraform && \
    terraform init
RUN rm -rf .terraform .terraform.lock.hcl

RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
RUN unzip awscliv2.zip &&./aws/install
RUN aws --version

RUN yum install -y mariadb105.x86_64
RUN mysql --version
#Python 3 Installation
RUN yum install -y python3.x86_64
RUN python3 --version

RUN yum search postgresql
RUN yum install vim -y
RUN yum install --nogpgcheck -y postgresql15-server.x86_64
RUN psql --version
# #oracle Instant Client Basic Installation
# RUN yum install -y https://download.oracle.com/otn_software/linux/instantclient/2110000/oracle-instantclient-basic-21.10.0.0.0-1.el8.x86_64.rpm
# #oracle Instant Client sq Plus Installation
# RUN yum install -y https://download.oracle.com/otn_software/linux/instantclient/2110000/oracle-instantclient-sqlplus-21.10.0.0.0-1.el8.x86_64.rpm
# RUN sqlplus --version
# #oracle Instant Client Basic coec Installation
# RUN yum install -y https://download.oracle.com/otn/software/linux/instantclient/2110000/oracle-instantclient-odbc-21.10.0.0.0-1.el8.x86_64.rpm
